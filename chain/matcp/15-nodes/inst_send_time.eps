%!PS-Adobe-2.0 EPSF-2.0
%%Title: inst_send_time.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Wed Oct 19 17:01:48 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (inst_send_time.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (ma)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Oct 19 17:01:48 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 768 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 768 M
63 0 V
5672 0 R
-63 0 V
stroke
888 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 1432 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 1432 M
63 0 V
5672 0 R
-63 0 V
stroke
888 1432 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 5)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 2096 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 2096 M
63 0 V
5672 0 R
-63 0 V
stroke
888 2096 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 2760 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 2760 M
63 0 V
5672 0 R
-63 0 V
stroke
888 2760 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 15)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 3423 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 3423 M
63 0 V
5672 0 R
-63 0 V
stroke
888 3423 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 4087 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 4087 M
63 0 V
5672 0 R
-63 0 V
stroke
888 4087 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 25)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 4751 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 4751 M
63 0 V
5672 0 R
-63 0 V
stroke
888 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 30)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1032 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1669 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1669 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1669 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2306 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2306 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2306 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 3)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2944 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2944 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2944 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3581 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3581 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3581 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 5)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4218 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4218 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4218 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4855 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4855 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4855 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 7)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5493 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5493 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5493 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6130 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6130 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6130 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 9)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1032 4751 N
0 -3983 V
5735 0 V
0 3983 V
-5735 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Time\(ms\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3899 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (Time\(s\))]
] -80.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
5696 4568 M
[ [(Helvetica) 240.0 0.0 true true 0 (inst_send_time)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
5840 4568 M
639 0 V
1118 1823 M
13 213 V
10 35 V
14 198 V
10 11 V
5 -54 V
31 620 V
8 -109 V
9 -169 V
11 -140 V
46 707 V
10 -91 V
28 311 V
12 -18 V
20 -252 V
15 -130 V
17 -41 V
16 -54 V
15 80 V
15 -203 V
10 7 V
5 -175 V
35 -161 V
5 -78 V
16 -135 V
11 -31 V
563 -103 V
46 -101 V
46 -85 V
46 -69 V
45 -66 V
47 -58 V
46 -53 V
47 -41 V
46 -38 V
47 -35 V
46 -27 V
10 165 V
49 -41 V
13 223 V
46 -72 V
15 -61 V
39 -49 V
13 -50 V
42 -41 V
17 148 V
10 87 V
52 17 V
47 -65 V
46 -55 V
11 168 V
45 -69 V
12 -16 V
44 -66 V
14 230 V
48 -52 V
46 -71 V
46 -66 V
46 -60 V
47 -53 V
46 -48 V
46 -42 V
46 -37 V
45 -24 V
47 -25 V
46 -27 V
46 -20 V
46 -14 V
46 -14 V
45 -14 V
47 -10 V
45 -10 V
47 -8 V
47 -6 V
46 -4 V
13 258 V
5 29 V
42 -42 V
13 163 V
13 212 V
29 -81 V
11 85 V
13 -8 V
6 -6 V
16 67 V
24 126 V
10 -109 V
44 621 V
18 -167 V
16 -150 V
14 155 V
49 4 V
23 -147 V
36 -131 V
23 -120 V
27 -105 V
27 -92 V
33 -72 V
24 -65 V
30 -55 V
23 -55 V
32 -41 V
23 -39 V
stroke 4616 1571 M
35 -30 V
19 -33 V
38 -25 V
17 -27 V
36 -16 V
15 -23 V
43 -12 V
14 -11 V
37 -16 V
23 -6 V
27 -12 V
31 -12 V
23 -11 V
41 -9 V
16 137 V
10 117 V
36 -40 V
10 146 V
10 145 V
15 256 V
20 107 V
22 -109 V
12 91 V
36 -107 V
9 -94 V
17 -48 V
13 -67 V
13 -3 V
32 -69 V
23 -64 V
20 -6 V
24 -54 V
14 23 V
18 -48 V
5 19 V
21 28 V
25 -50 V
15 -48 V
19 -35 V
12 197 V
16 299 V
16 3 V
23 -92 V
12 146 V
10 71 V
35 1 V
22 -112 V
12 80 V
21 346 V
10 -149 V
32 -128 V
41 -115 V
6 -94 V
19 -51 V
16 -83 V
35 -70 V
22 -68 V
20 -56 V
15 -53 V
23 -41 V
23 -39 V
19 -28 V
22 -25 V
34 -23 V
15 46 V
16 -27 V
33 -29 V
21 -25 V
41 -22 V
13 41 V
44 -24 V
13 30 V
40 -22 V
11 204 V
7 72 V
42 -50 V
11 170 V
29 0 V
17 -66 V
17 -59 V
26 -58 V
5 16 V
27 -51 V
13 -40 V
36 -32 V
14 -33 V
15 100 V
43 -37 V
17 319 V
45 -80 V
16 273 V
11 73 V
35 -113 V
14 78 V
14 194 V
45 -85 V
8 26 V
25 -125 V
2 -7 V
1118 1823 Pls
1131 2036 Pls
1141 2071 Pls
1155 2269 Pls
1165 2280 Pls
1170 2226 Pls
1201 2846 Pls
1209 2737 Pls
1218 2568 Pls
1229 2428 Pls
1275 3135 Pls
1285 3044 Pls
1313 3355 Pls
1325 3337 Pls
1345 3085 Pls
1360 2955 Pls
1377 2914 Pls
1393 2860 Pls
1408 2940 Pls
1423 2737 Pls
1433 2744 Pls
1438 2569 Pls
1473 2408 Pls
1478 2330 Pls
1494 2195 Pls
1505 2164 Pls
2068 2061 Pls
2114 1960 Pls
2160 1875 Pls
2206 1806 Pls
2251 1740 Pls
2298 1682 Pls
2344 1629 Pls
2391 1588 Pls
2437 1550 Pls
2484 1515 Pls
2530 1488 Pls
2540 1653 Pls
2589 1612 Pls
2602 1835 Pls
2648 1763 Pls
2663 1702 Pls
2702 1653 Pls
2715 1603 Pls
2757 1562 Pls
2774 1710 Pls
2784 1797 Pls
2836 1814 Pls
2883 1749 Pls
2929 1694 Pls
2940 1862 Pls
2985 1793 Pls
2997 1777 Pls
3041 1711 Pls
3055 1941 Pls
3103 1889 Pls
3149 1818 Pls
3195 1752 Pls
3241 1692 Pls
3288 1639 Pls
3334 1591 Pls
3380 1549 Pls
3426 1512 Pls
3471 1488 Pls
3518 1463 Pls
3564 1436 Pls
3610 1416 Pls
3656 1402 Pls
3702 1388 Pls
3747 1374 Pls
3794 1364 Pls
3839 1354 Pls
3886 1346 Pls
3933 1340 Pls
3979 1336 Pls
3992 1594 Pls
3997 1623 Pls
4039 1581 Pls
4052 1744 Pls
4065 1956 Pls
4094 1875 Pls
4105 1960 Pls
4118 1952 Pls
4124 1946 Pls
4140 2013 Pls
4164 2139 Pls
4174 2030 Pls
4218 2651 Pls
4236 2484 Pls
4252 2334 Pls
4266 2489 Pls
4315 2493 Pls
4338 2346 Pls
4374 2215 Pls
4397 2095 Pls
4424 1990 Pls
4451 1898 Pls
4484 1826 Pls
4508 1761 Pls
4538 1706 Pls
4561 1651 Pls
4593 1610 Pls
4616 1571 Pls
4651 1541 Pls
4670 1508 Pls
4708 1483 Pls
4725 1456 Pls
4761 1440 Pls
4776 1417 Pls
4819 1405 Pls
4833 1394 Pls
4870 1378 Pls
4893 1372 Pls
4920 1360 Pls
4951 1348 Pls
4974 1337 Pls
5015 1328 Pls
5031 1465 Pls
5041 1582 Pls
5077 1542 Pls
5087 1688 Pls
5097 1833 Pls
5112 2089 Pls
5132 2196 Pls
5154 2087 Pls
5166 2178 Pls
5202 2071 Pls
5211 1977 Pls
5228 1929 Pls
5241 1862 Pls
5254 1859 Pls
5286 1790 Pls
5309 1726 Pls
5329 1720 Pls
5353 1666 Pls
5367 1689 Pls
5385 1641 Pls
5390 1660 Pls
5411 1688 Pls
5436 1638 Pls
5451 1590 Pls
5470 1555 Pls
5482 1752 Pls
5498 2051 Pls
5514 2054 Pls
5537 1962 Pls
5549 2108 Pls
5559 2179 Pls
5594 2180 Pls
5616 2068 Pls
5628 2148 Pls
5649 2494 Pls
5659 2345 Pls
5691 2217 Pls
5732 2102 Pls
5738 2008 Pls
5757 1957 Pls
5773 1874 Pls
5808 1804 Pls
5830 1736 Pls
5850 1680 Pls
5865 1627 Pls
5888 1586 Pls
5911 1547 Pls
5930 1519 Pls
5952 1494 Pls
5986 1471 Pls
6001 1517 Pls
6017 1490 Pls
6050 1461 Pls
6071 1436 Pls
6112 1414 Pls
6125 1455 Pls
6169 1431 Pls
6182 1461 Pls
6222 1439 Pls
6233 1643 Pls
6240 1715 Pls
6282 1665 Pls
6293 1835 Pls
6322 1835 Pls
6339 1769 Pls
6356 1710 Pls
6382 1652 Pls
6387 1668 Pls
6414 1617 Pls
6427 1577 Pls
6463 1545 Pls
6477 1512 Pls
6492 1612 Pls
6535 1575 Pls
6552 1894 Pls
6597 1814 Pls
6613 2087 Pls
6624 2160 Pls
6659 2047 Pls
6673 2125 Pls
6687 2319 Pls
6732 2234 Pls
6740 2260 Pls
6765 2135 Pls
6159 4568 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1032 4751 N
0 -3983 V
5735 0 V
0 3983 V
-5735 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
