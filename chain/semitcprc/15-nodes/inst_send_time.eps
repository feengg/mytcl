%!PS-Adobe-2.0 EPSF-2.0
%%Title: inst_send_time.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon Oct 24 16:50:44 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (inst_send_time.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (ma)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Oct 24 16:50:44 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 768 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 768 M
63 0 V
5672 0 R
-63 0 V
stroke
888 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 1432 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 1432 M
63 0 V
5672 0 R
-63 0 V
stroke
888 1432 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 5)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 2096 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 2096 M
63 0 V
5672 0 R
-63 0 V
stroke
888 2096 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 2760 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 2760 M
63 0 V
5672 0 R
-63 0 V
stroke
888 2760 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 15)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 3423 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 3423 M
63 0 V
5672 0 R
-63 0 V
stroke
888 3423 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 4087 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 4087 M
63 0 V
5672 0 R
-63 0 V
stroke
888 4087 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 25)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 4751 M
5735 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 4751 M
63 0 V
5672 0 R
-63 0 V
stroke
888 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 30)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1032 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1032 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1032 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2179 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2179 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2179 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 22)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3326 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3326 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3326 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 24)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4473 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4473 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4473 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 26)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5620 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5620 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5620 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 28)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 30)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1032 4751 N
0 -3983 V
5735 0 V
0 3983 V
-5735 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Time\(ms\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3899 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (Time\(s\))]
] -80.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
5696 4568 M
[ [(Helvetica) 240.0 0.0 true true 0 (inst_send_time)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
5840 4568 M
639 0 V
1032 1463 M
10 -16 V
34 39 V
25 31 V
26 -27 V
28 -28 V
19 -22 V
30 -15 V
9 114 V
16 90 V
27 -39 V
19 -33 V
20 381 V
18 -77 V
10 152 V
7 38 V
21 437 V
16 -146 V
24 500 V
14 33 V
20 -193 V
16 -171 V
11 71 V
15 -163 V
10 68 V
15 -149 V
12 -80 V
16 -1 V
15 -118 V
10 102 V
21 -55 V
18 -113 V
24 -99 V
7 29 V
29 -92 V
17 56 V
13 -31 V
15 -80 V
11 -68 V
24 -59 V
18 -52 V
12 -44 V
20 -38 V
18 -35 V
17 -34 V
11 203 V
24 -57 V
16 -44 V
22 54 V
19 -50 V
18 -47 V
20 -40 V
24 -32 V
14 -27 V
21 -28 V
10 190 V
16 -48 V
24 -37 V
17 -37 V
18 -31 V
12 103 V
15 -41 V
14 -29 V
15 -25 V
21 -27 V
7 48 V
25 222 V
25 -58 V
12 153 V
12 15 V
19 -75 V
33 -56 V
14 295 V
11 -95 V
28 -82 V
16 -64 V
16 341 V
27 -100 V
13 -87 V
10 151 V
12 156 V
26 -114 V
15 -102 V
21 -61 V
24 -88 V
19 -73 V
15 0 V
26 -61 V
16 -57 V
7 71 V
33 -63 V
33 27 V
15 -53 V
34 -45 V
20 -38 V
30 -36 V
20 -37 V
26 -24 V
24 -24 V
30 -25 V
20 -22 V
32 -18 V
21 -12 V
stroke 2947 1385 M
31 -14 V
25 -11 V
9 181 V
22 -33 V
26 -29 V
10 181 V
18 300 V
29 -81 V
18 -69 V
8 6 V
14 -67 V
5 25 V
33 -65 V
12 -49 V
9 52 V
11 -49 V
37 -45 V
12 135 V
9 123 V
14 112 V
5 -73 V
39 863 V
11 -186 V
12 -159 V
28 -46 V
12 -141 V
13 -122 V
13 -36 V
27 -96 V
12 -88 V
20 -73 V
11 -24 V
20 -64 V
22 -53 V
13 -47 V
14 -49 V
15 -36 V
24 -35 V
24 -28 V
15 -21 V
14 -20 V
12 -21 V
16 -21 V
24 -10 V
12 -16 V
12 -16 V
10 187 V
12 21 V
19 -34 V
16 -36 V
8 -31 V
19 100 V
12 81 V
7 78 V
15 73 V
24 580 V
7 -15 V
15 -134 V
19 -115 V
7 -42 V
9 104 V
5 -28 V
10 90 V
55 1120 V
22 -50 V
11 -256 V
21 -225 V
24 -198 V
13 -74 V
13 -96 V
24 -29 V
34 -76 V
14 -86 V
13 175 V
11 -143 V
31 -132 V
16 -115 V
13 -100 V
15 -80 V
15 -69 V
28 -67 V
16 123 V
16 -78 V
28 -59 V
6 44 V
25 -61 V
24 -58 V
14 -43 V
21 -36 V
30 -31 V
11 8 V
21 -36 V
25 -24 V
16 -28 V
15 -23 V
26 -23 V
19 -14 V
17 -13 V
17 -18 V
28 -8 V
13 -8 V
40 -14 V
11 39 V
39 -7 V
stroke 4804 1380 M
17 -10 V
27 -11 V
27 -7 V
21 -9 V
32 -2 V
14 -7 V
31 -3 V
16 -9 V
10 232 V
27 -34 V
16 -27 V
12 122 V
9 28 V
15 -45 V
9 137 V
12 29 V
31 -62 V
9 148 V
16 -68 V
13 -64 V
17 -50 V
14 18 V
18 -49 V
17 -44 V
6 47 V
21 507 V
5 -99 V
31 283 V
10 80 V
19 -142 V
13 -123 V
14 -104 V
18 -99 V
23 -79 V
18 -69 V
13 239 V
12 -5 V
35 -91 V
11 70 V
11 -42 V
13 -84 V
24 -76 V
18 -67 V
14 -29 V
13 17 V
24 -59 V
12 -51 V
15 -37 V
17 -35 V
22 -32 V
18 -30 V
12 95 V
16 -36 V
23 -27 V
23 129 V
11 195 V
12 -69 V
21 -65 V
7 67 V
28 -60 V
15 -55 V
39 14 V
13 -47 V
21 -46 V
20 -35 V
7 102 V
18 -45 V
11 206 V
25 -69 V
14 -55 V
15 -51 V
14 -44 V
12 -34 V
26 -14 V
5 32 V
17 273 V
14 158 V
34 -94 V
18 -74 V
7 57 V
12 71 V
24 -83 V
27 -72 V
13 230 V
21 8 V
29 -98 V
13 212 V
15 -109 V
35 -95 V
13 -85 V
41 -68 V
12 3 V
38 -66 V
11 160 V
46 -25 V
42 -73 V
42 -62 V
43 -53 V
42 -50 V
42 -46 V
24 -21 V
1042 1447 Pls
1076 1486 Pls
1101 1517 Pls
1127 1490 Pls
1155 1462 Pls
1174 1440 Pls
1204 1425 Pls
1213 1539 Pls
1229 1629 Pls
1256 1590 Pls
1275 1557 Pls
1295 1938 Pls
1313 1861 Pls
1323 2013 Pls
1330 2051 Pls
1351 2488 Pls
1367 2342 Pls
1391 2842 Pls
1405 2875 Pls
1425 2682 Pls
1441 2511 Pls
1452 2582 Pls
1467 2419 Pls
1477 2487 Pls
1492 2338 Pls
1504 2258 Pls
1520 2257 Pls
1535 2139 Pls
1545 2241 Pls
1566 2186 Pls
1584 2073 Pls
1608 1974 Pls
1615 2003 Pls
1644 1911 Pls
1661 1967 Pls
1674 1936 Pls
1689 1856 Pls
1700 1788 Pls
1724 1729 Pls
1742 1677 Pls
1754 1633 Pls
1774 1595 Pls
1792 1560 Pls
1809 1526 Pls
1820 1729 Pls
1844 1672 Pls
1860 1628 Pls
1882 1682 Pls
1901 1632 Pls
1919 1585 Pls
1939 1545 Pls
1963 1513 Pls
1977 1486 Pls
1998 1458 Pls
2008 1648 Pls
2024 1600 Pls
2048 1563 Pls
2065 1526 Pls
2083 1495 Pls
2095 1598 Pls
2110 1557 Pls
2124 1528 Pls
2139 1503 Pls
2160 1476 Pls
2167 1524 Pls
2192 1746 Pls
2217 1688 Pls
2229 1841 Pls
2241 1856 Pls
2260 1781 Pls
2293 1725 Pls
2307 2020 Pls
2318 1925 Pls
2346 1843 Pls
2362 1779 Pls
2378 2120 Pls
2405 2020 Pls
2418 1933 Pls
2428 2084 Pls
2440 2240 Pls
2466 2126 Pls
2481 2024 Pls
2502 1963 Pls
2526 1875 Pls
2545 1802 Pls
2560 1802 Pls
2586 1741 Pls
2602 1684 Pls
2609 1755 Pls
2642 1692 Pls
2675 1719 Pls
2690 1666 Pls
2724 1621 Pls
2744 1583 Pls
2774 1547 Pls
2794 1510 Pls
2820 1486 Pls
2844 1462 Pls
2874 1437 Pls
2894 1415 Pls
2926 1397 Pls
2947 1385 Pls
2978 1371 Pls
3003 1360 Pls
3012 1541 Pls
3034 1508 Pls
3060 1479 Pls
3070 1660 Pls
3088 1960 Pls
3117 1879 Pls
3135 1810 Pls
3143 1816 Pls
3157 1749 Pls
3162 1774 Pls
3195 1709 Pls
3207 1660 Pls
3216 1712 Pls
3227 1663 Pls
3264 1618 Pls
3276 1753 Pls
3285 1876 Pls
3299 1988 Pls
3304 1915 Pls
3343 2778 Pls
3354 2592 Pls
3366 2433 Pls
3394 2387 Pls
3406 2246 Pls
3419 2124 Pls
3432 2088 Pls
3459 1992 Pls
3471 1904 Pls
3491 1831 Pls
3502 1807 Pls
3522 1743 Pls
3544 1690 Pls
3557 1643 Pls
3571 1594 Pls
3586 1558 Pls
3610 1523 Pls
3634 1495 Pls
3649 1474 Pls
3663 1454 Pls
3675 1433 Pls
3691 1412 Pls
3715 1402 Pls
3727 1386 Pls
3739 1370 Pls
3749 1557 Pls
3761 1578 Pls
3780 1544 Pls
3796 1508 Pls
3804 1477 Pls
3823 1577 Pls
3835 1658 Pls
3842 1736 Pls
3857 1809 Pls
3881 2389 Pls
3888 2374 Pls
3903 2240 Pls
3922 2125 Pls
3929 2083 Pls
3938 2187 Pls
3943 2159 Pls
3953 2249 Pls
4008 3369 Pls
4030 3319 Pls
4041 3063 Pls
4062 2838 Pls
4086 2640 Pls
4099 2566 Pls
4112 2470 Pls
4136 2441 Pls
4170 2365 Pls
4184 2279 Pls
4197 2454 Pls
4208 2311 Pls
4239 2179 Pls
4255 2064 Pls
4268 1964 Pls
4283 1884 Pls
4298 1815 Pls
4326 1748 Pls
4342 1871 Pls
4358 1793 Pls
4386 1734 Pls
4392 1778 Pls
4417 1717 Pls
4441 1659 Pls
4455 1616 Pls
4476 1580 Pls
4506 1549 Pls
4517 1557 Pls
4538 1521 Pls
4563 1497 Pls
4579 1469 Pls
4594 1446 Pls
4620 1423 Pls
4639 1409 Pls
4656 1396 Pls
4673 1378 Pls
4701 1370 Pls
4714 1362 Pls
4754 1348 Pls
4765 1387 Pls
4804 1380 Pls
4821 1370 Pls
4848 1359 Pls
4875 1352 Pls
4896 1343 Pls
4928 1341 Pls
4942 1334 Pls
4973 1331 Pls
4989 1322 Pls
4999 1554 Pls
5026 1520 Pls
5042 1493 Pls
5054 1615 Pls
5063 1643 Pls
5078 1598 Pls
5087 1735 Pls
5099 1764 Pls
5130 1702 Pls
5139 1850 Pls
5155 1782 Pls
5168 1718 Pls
5185 1668 Pls
5199 1686 Pls
5217 1637 Pls
5234 1593 Pls
5240 1640 Pls
5261 2147 Pls
5266 2048 Pls
5297 2331 Pls
5307 2411 Pls
5326 2269 Pls
5339 2146 Pls
5353 2042 Pls
5371 1943 Pls
5394 1864 Pls
5412 1795 Pls
5425 2034 Pls
5437 2029 Pls
5472 1938 Pls
5483 2008 Pls
5494 1966 Pls
5507 1882 Pls
5531 1806 Pls
5549 1739 Pls
5563 1710 Pls
5576 1727 Pls
5600 1668 Pls
5612 1617 Pls
5627 1580 Pls
5644 1545 Pls
5666 1513 Pls
5684 1483 Pls
5696 1578 Pls
5712 1542 Pls
5735 1515 Pls
5758 1644 Pls
5769 1839 Pls
5781 1770 Pls
5802 1705 Pls
5809 1772 Pls
5837 1712 Pls
5852 1657 Pls
5891 1671 Pls
5904 1624 Pls
5925 1578 Pls
5945 1543 Pls
5952 1645 Pls
5970 1600 Pls
5981 1806 Pls
6006 1737 Pls
6020 1682 Pls
6035 1631 Pls
6049 1587 Pls
6061 1553 Pls
6087 1539 Pls
6092 1571 Pls
6109 1844 Pls
6123 2002 Pls
6157 1908 Pls
6175 1834 Pls
6182 1891 Pls
6194 1962 Pls
6218 1879 Pls
6245 1807 Pls
6258 2037 Pls
6279 2045 Pls
6308 1947 Pls
6321 2159 Pls
6336 2050 Pls
6371 1955 Pls
6384 1870 Pls
6425 1802 Pls
6437 1805 Pls
6475 1739 Pls
6486 1899 Pls
6532 1874 Pls
6574 1801 Pls
6616 1739 Pls
6659 1686 Pls
6701 1636 Pls
6743 1590 Pls
6159 4568 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1032 4751 N
0 -3983 V
5735 0 V
0 3983 V
-5735 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
