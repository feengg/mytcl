%!PS-Adobe-2.0 EPSF-2.0
%%Title: throughput(13).eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon Jun 27 20:41:46 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (throughput\(13\).eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (ma)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun 27 20:41:46 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 95)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 1432 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 1432 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 1432 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 2096 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 2096 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2096 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 105)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 2760 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 2760 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2760 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 110)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 3423 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 3423 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3423 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 115)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 4087 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 4087 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4087 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 120)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 4751 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 4751 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 125)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1176 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2108 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3040 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3040 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3040 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3972 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3972 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3972 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 150)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4903 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4903 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4903 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5835 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5835 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5835 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 250)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 300)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Throghput\(Kbps\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3971 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (Time\(s\))]
] -80.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5696 4568 M
[ [(Helvetica) 240.0 0.0 true true 0 (hops=13)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5840 4568 M
639 0 V
1213 1598 M
19 1767 V
19 -131 V
19 429 V
19 58 V
20 -820 V
19 -858 V
18 -379 V
19 1366 V
19 877 V
19 -1133 V
19 -322 V
19 597 V
20 -383 V
18 1218 V
20 -1500 V
18 813 V
20 175 V
19 -124 V
19 -289 V
19 781 V
18 12 V
20 -269 V
19 -543 V
19 -344 V
19 -248 V
19 1540 V
19 675 V
19 -1406 V
20 914 V
18 -696 V
19 996 V
19 -2254 V
19 1458 V
19 -804 V
19 661 V
19 -1819 V
18 1203 V
20 559 V
19 588 V
19 -334 V
19 -1178 V
20 -328 V
19 1428 V
18 -299 V
20 -628 V
19 -46 V
19 708 V
19 -736 V
19 1424 V
19 -175 V
20 220 V
19 -2186 V
19 879 V
19 1326 V
19 -1117 V
19 266 V
19 -473 V
19 77 V
19 -686 V
19 108 V
19 815 V
20 -679 V
19 -175 V
18 -570 V
20 637 V
19 481 V
19 -48 V
19 -37 V
19 -674 V
19 1337 V
19 -116 V
19 -559 V
19 375 V
19 -397 V
19 424 V
19 122 V
18 759 V
19 -103 V
19 -1909 V
20 1458 V
19 335 V
19 -685 V
19 -1026 V
19 457 V
19 1129 V
19 135 V
19 549 V
19 -1730 V
19 780 V
19 -770 V
19 843 V
19 0 V
19 -82 V
19 164 V
19 63 V
20 -1070 V
19 612 V
19 607 V
19 -1068 V
18 172 V
19 1079 V
19 -813 V
stroke 3155 3035 M
19 80 V
19 -321 V
19 604 V
19 459 V
19 -1235 V
18 589 V
20 -347 V
19 -1255 V
19 1998 V
19 -960 V
19 829 V
19 -1052 V
19 1447 V
18 -1070 V
19 1056 V
19 -1061 V
18 445 V
19 -56 V
19 -81 V
20 -100 V
19 120 V
19 415 V
19 128 V
19 -1104 V
19 22 V
20 -344 V
18 -99 V
19 847 V
19 -158 V
19 180 V
19 497 V
19 92 V
20 -291 V
19 -1066 V
18 -214 V
19 1679 V
20 -101 V
19 317 V
19 -1063 V
19 829 V
19 -497 V
19 -675 V
19 712 V
19 511 V
19 -836 V
19 -918 V
19 948 V
19 944 V
19 -584 V
19 59 V
19 -208 V
19 -548 V
19 -783 V
20 1338 V
19 926 V
18 -1340 V
20 462 V
19 -22 V
19 -111 V
19 775 V
19 -214 V
18 -875 V
19 -651 V
20 762 V
19 97 V
19 -1440 V
20 -674 V
19 2791 V
20 -427 V
19 87 V
19 -225 V
19 -117 V
18 -145 V
19 478 V
20 -307 V
19 654 V
19 20 V
19 381 V
20 -1319 V
18 648 V
19 -928 V
19 398 V
19 -591 V
19 879 V
19 571 V
19 -1639 V
19 641 V
19 -189 V
19 -136 V
19 309 V
19 1730 V
19 -201 V
19 -2183 V
18 810 V
19 407 V
19 87 V
19 -248 V
19 600 V
19 -763 V
19 -270 V
19 288 V
19 157 V
19 438 V
19 -1601 V
stroke 5133 1933 M
19 1410 V
19 -638 V
19 4 V
18 562 V
19 -1180 V
19 1271 V
19 -188 V
19 -123 V
19 -223 V
19 616 V
19 -596 V
19 13 V
20 -911 V
18 1889 V
19 522 V
19 -1722 V
19 1787 V
18 -1086 V
20 -400 V
18 361 V
20 42 V
19 117 V
19 -457 V
19 142 V
19 29 V
19 -668 V
18 1407 V
19 290 V
19 -1435 V
19 765 V
19 901 V
19 -1147 V
19 -595 V
18 1000 V
20 -258 V
19 -254 V
19 -581 V
18 70 V
19 162 V
19 268 V
19 163 V
20 -269 V
19 -156 V
19 1022 V
19 -988 V
19 1133 V
19 -143 V
19 -1120 V
18 970 V
20 -698 V
19 -1268 V
19 813 V
19 1051 V
20 -959 V
19 1003 V
18 -2087 V
20 1259 V
19 -634 V
19 784 V
19 -538 V
19 1296 V
20 -274 V
19 71 V
19 -1385 V
19 594 V
19 -525 V
20 595 V
19 -269 V
19 -95 V
19 -321 V
19 1434 V
19 -504 V
19 -319 V
19 897 V
19 -618 V
19 35 V
19 276 V
18 -1087 V
19 1131 V
19 -582 V
19 -224 V
19 -151 V
19 741 V
19 690 V
19 -1435 V
18 960 V
1213 1598 Pls
1232 3365 Pls
1251 3234 Pls
1270 3663 Pls
1289 3721 Pls
1309 2901 Pls
1328 2043 Pls
1346 1664 Pls
1365 3030 Pls
1384 3907 Pls
1403 2774 Pls
1422 2452 Pls
1441 3049 Pls
1461 2666 Pls
1479 3884 Pls
1499 2384 Pls
1517 3197 Pls
1537 3372 Pls
1556 3248 Pls
1575 2959 Pls
1594 3740 Pls
1612 3752 Pls
1632 3483 Pls
1651 2940 Pls
1670 2596 Pls
1689 2348 Pls
1708 3888 Pls
1727 4563 Pls
1746 3157 Pls
1766 4071 Pls
1784 3375 Pls
1803 4371 Pls
1822 2117 Pls
1841 3575 Pls
1860 2771 Pls
1879 3432 Pls
1898 1613 Pls
1916 2816 Pls
1936 3375 Pls
1955 3963 Pls
1974 3629 Pls
1993 2451 Pls
2013 2123 Pls
2032 3551 Pls
2050 3252 Pls
2070 2624 Pls
2089 2578 Pls
2108 3286 Pls
2127 2550 Pls
2146 3974 Pls
2165 3799 Pls
2185 4019 Pls
2204 1833 Pls
2223 2712 Pls
2242 4038 Pls
2261 2921 Pls
2280 3187 Pls
2299 2714 Pls
2318 2791 Pls
2337 2105 Pls
2356 2213 Pls
2375 3028 Pls
2395 2349 Pls
2414 2174 Pls
2432 1604 Pls
2452 2241 Pls
2471 2722 Pls
2490 2674 Pls
2509 2637 Pls
2528 1963 Pls
2547 3300 Pls
2566 3184 Pls
2585 2625 Pls
2604 3000 Pls
2623 2603 Pls
2642 3027 Pls
2661 3149 Pls
2679 3908 Pls
2698 3805 Pls
2717 1896 Pls
2737 3354 Pls
2756 3689 Pls
2775 3004 Pls
2794 1978 Pls
2813 2435 Pls
2832 3564 Pls
2851 3699 Pls
2870 4248 Pls
2889 2518 Pls
2908 3298 Pls
2927 2528 Pls
2946 3371 Pls
2965 3371 Pls
2984 3289 Pls
3003 3453 Pls
3022 3516 Pls
3042 2446 Pls
3061 3058 Pls
3080 3665 Pls
3099 2597 Pls
3117 2769 Pls
3136 3848 Pls
3155 3035 Pls
3174 3115 Pls
3193 2794 Pls
3212 3398 Pls
3231 3857 Pls
3250 2622 Pls
3268 3211 Pls
3288 2864 Pls
3307 1609 Pls
3326 3607 Pls
3345 2647 Pls
3364 3476 Pls
3383 2424 Pls
3402 3871 Pls
3420 2801 Pls
3439 3857 Pls
3458 2796 Pls
3476 3241 Pls
3495 3185 Pls
3514 3104 Pls
3534 3004 Pls
3553 3124 Pls
3572 3539 Pls
3591 3667 Pls
3610 2563 Pls
3629 2585 Pls
3649 2241 Pls
3667 2142 Pls
3686 2989 Pls
3705 2831 Pls
3724 3011 Pls
3743 3508 Pls
3762 3600 Pls
3782 3309 Pls
3801 2243 Pls
3819 2029 Pls
3838 3708 Pls
3858 3607 Pls
3877 3924 Pls
3896 2861 Pls
3915 3690 Pls
3934 3193 Pls
3953 2518 Pls
3972 3230 Pls
3991 3741 Pls
4010 2905 Pls
4029 1987 Pls
4048 2935 Pls
4067 3879 Pls
4086 3295 Pls
4105 3354 Pls
4124 3146 Pls
4143 2598 Pls
4162 1815 Pls
4182 3153 Pls
4201 4079 Pls
4219 2739 Pls
4239 3201 Pls
4258 3179 Pls
4277 3068 Pls
4296 3843 Pls
4315 3629 Pls
4333 2754 Pls
4352 2103 Pls
4372 2865 Pls
4391 2962 Pls
4410 1522 Pls
4430 848 Pls
4449 3639 Pls
4469 3212 Pls
4488 3299 Pls
4507 3074 Pls
4526 2957 Pls
4544 2812 Pls
4563 3290 Pls
4583 2983 Pls
4602 3637 Pls
4621 3657 Pls
4640 4038 Pls
4660 2719 Pls
4678 3367 Pls
4697 2439 Pls
4716 2837 Pls
4735 2246 Pls
4754 3125 Pls
4773 3696 Pls
4792 2057 Pls
4811 2698 Pls
4830 2509 Pls
4849 2373 Pls
4868 2682 Pls
4887 4412 Pls
4906 4211 Pls
4925 2028 Pls
4943 2838 Pls
4962 3245 Pls
4981 3332 Pls
5000 3084 Pls
5019 3684 Pls
5038 2921 Pls
5057 2651 Pls
5076 2939 Pls
5095 3096 Pls
5114 3534 Pls
5133 1933 Pls
5152 3343 Pls
5171 2705 Pls
5190 2709 Pls
5208 3271 Pls
5227 2091 Pls
5246 3362 Pls
5265 3174 Pls
5284 3051 Pls
5303 2828 Pls
5322 3444 Pls
5341 2848 Pls
5360 2861 Pls
5380 1950 Pls
5398 3839 Pls
5417 4361 Pls
5436 2639 Pls
5455 4426 Pls
5473 3340 Pls
5493 2940 Pls
5511 3301 Pls
5531 3343 Pls
5550 3460 Pls
5569 3003 Pls
5588 3145 Pls
5607 3174 Pls
5626 2506 Pls
5644 3913 Pls
5663 4203 Pls
5682 2768 Pls
5701 3533 Pls
5720 4434 Pls
5739 3287 Pls
5758 2692 Pls
5776 3692 Pls
5796 3434 Pls
5815 3180 Pls
5834 2599 Pls
5852 2669 Pls
5871 2831 Pls
5890 3099 Pls
5909 3262 Pls
5929 2993 Pls
5948 2837 Pls
5967 3859 Pls
5986 2871 Pls
6005 4004 Pls
6024 3861 Pls
6043 2741 Pls
6061 3711 Pls
6081 3013 Pls
6100 1745 Pls
6119 2558 Pls
6138 3609 Pls
6158 2650 Pls
6177 3653 Pls
6195 1566 Pls
6215 2825 Pls
6234 2191 Pls
6253 2975 Pls
6272 2437 Pls
6291 3733 Pls
6311 3459 Pls
6330 3530 Pls
6349 2145 Pls
6368 2739 Pls
6387 2214 Pls
6407 2809 Pls
6426 2540 Pls
6445 2445 Pls
6464 2124 Pls
6483 3558 Pls
6502 3054 Pls
6521 2735 Pls
6540 3632 Pls
6559 3014 Pls
6578 3049 Pls
6597 3325 Pls
6615 2238 Pls
6634 3369 Pls
6653 2787 Pls
6672 2563 Pls
6691 2412 Pls
6710 3153 Pls
6729 3843 Pls
6748 2408 Pls
6766 3368 Pls
6159 4568 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
