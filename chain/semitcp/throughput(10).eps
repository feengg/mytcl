%!PS-Adobe-2.0 EPSF-2.0
%%Title: throughput(10).eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon Jun 27 20:41:46 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (throughput\(10\).eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (ma)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun 27 20:41:46 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 105)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 1432 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 1432 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 1432 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 110)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 2096 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 2096 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2096 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 115)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 2760 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 2760 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2760 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 120)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 3423 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 3423 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3423 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 125)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 4087 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 4087 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4087 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 130)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 4751 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 4751 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 135)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1176 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2108 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2108 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2108 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3040 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3040 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3040 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3972 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3972 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3972 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 150)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4903 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4903 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4903 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5835 768 M
0 3680 V
0 240 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5835 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5835 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 250)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 300)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Throghput\(Kbps\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3971 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (Time\(s\))]
] -80.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5696 4568 M
[ [(Helvetica) 240.0 0.0 true true 0 (hops=10)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5840 4568 M
639 0 V
1213 1372 M
19 941 V
19 93 V
19 1140 V
19 -1557 V
19 -401 V
19 64 V
19 552 V
20 435 V
18 481 V
19 359 V
19 -564 V
19 -585 V
19 626 V
19 33 V
19 -364 V
19 806 V
19 -503 V
20 159 V
19 -972 V
19 1164 V
19 -1559 V
19 962 V
19 -430 V
19 652 V
19 86 V
19 -890 V
19 1041 V
20 -467 V
19 -17 V
19 -1184 V
19 1488 V
19 -634 V
19 -351 V
19 870 V
19 -100 V
19 230 V
19 -95 V
19 787 V
19 -104 V
19 -1879 V
19 1230 V
19 205 V
19 -831 V
19 1134 V
19 -1479 V
19 535 V
19 1180 V
18 -1720 V
19 -109 V
19 1631 V
20 -820 V
19 -1534 V
19 2024 V
19 -734 V
19 92 V
19 358 V
19 13 V
19 502 V
19 -811 V
19 -199 V
19 463 V
19 551 V
19 -744 V
19 -620 V
19 1434 V
18 -840 V
19 501 V
19 -663 V
19 503 V
18 142 V
19 -303 V
19 -846 V
19 71 V
19 1758 V
19 -1076 V
19 67 V
19 45 V
20 -42 V
19 -5 V
19 -61 V
19 -725 V
19 -271 V
18 238 V
19 107 V
19 248 V
19 -821 V
19 1156 V
19 1410 V
19 -1296 V
19 -801 V
19 -524 V
18 986 V
20 362 V
19 -35 V
18 -138 V
20 -274 V
19 247 V
19 -691 V
19 779 V
19 -839 V
20 765 V
19 -256 V
stroke 3152 2314 M
19 -132 V
19 653 V
19 1082 V
19 -811 V
19 386 V
20 -211 V
18 -734 V
19 1304 V
19 -1420 V
19 640 V
19 -687 V
19 1034 V
18 -1423 V
19 528 V
19 -300 V
19 292 V
19 737 V
19 -380 V
19 14 V
19 955 V
19 -2446 V
19 593 V
18 -534 V
20 1698 V
18 -750 V
20 34 V
19 -1291 V
19 -8 V
19 1419 V
19 -44 V
19 833 V
19 -263 V
19 213 V
19 -494 V
19 -1066 V
19 403 V
19 1158 V
19 -284 V
19 19 V
20 -404 V
20 604 V
19 148 V
19 -666 V
19 -605 V
19 933 V
19 -749 V
19 582 V
19 19 V
19 216 V
18 -516 V
19 432 V
19 -544 V
19 555 V
19 -1298 V
20 162 V
19 1308 V
19 -950 V
19 1743 V
19 -1779 V
19 885 V
19 522 V
19 -898 V
19 1062 V
18 -1260 V
19 1575 V
19 -1458 V
19 401 V
19 -756 V
19 314 V
19 -187 V
19 -188 V
20 975 V
18 -1243 V
19 1090 V
19 -62 V
19 -795 V
19 1407 V
18 -567 V
20 -281 V
18 -276 V
19 27 V
19 -322 V
19 1734 V
19 -1335 V
19 -804 V
20 868 V
19 -854 V
19 842 V
19 -1408 V
19 1447 V
19 362 V
18 65 V
19 -80 V
20 -996 V
19 -810 V
19 1649 V
19 -669 V
18 262 V
20 75 V
19 176 V
19 401 V
19 -482 V
19 658 V
19 -973 V
stroke 5128 2315 M
19 795 V
19 288 V
20 -1378 V
19 14 V
19 89 V
19 472 V
19 87 V
19 646 V
19 -41 V
19 176 V
19 -998 V
19 -101 V
19 -24 V
18 -494 V
19 1179 V
19 -462 V
19 -561 V
18 -11 V
20 438 V
19 251 V
19 -291 V
19 114 V
18 83 V
19 980 V
19 -2063 V
19 1512 V
20 -1080 V
19 680 V
19 -1146 V
19 1344 V
19 -850 V
19 -720 V
19 1706 V
19 -441 V
19 -190 V
19 -152 V
19 726 V
19 -452 V
19 279 V
19 -156 V
19 -470 V
19 904 V
19 -909 V
19 951 V
19 253 V
19 -1149 V
19 887 V
20 -139 V
18 -316 V
19 81 V
20 -99 V
19 -891 V
19 300 V
19 500 V
19 -166 V
19 832 V
18 -1684 V
19 1481 V
19 -410 V
19 -527 V
19 -85 V
19 541 V
19 300 V
19 388 V
19 -688 V
19 -18 V
19 321 V
19 149 V
19 -1 V
20 -605 V
18 170 V
19 -102 V
19 -311 V
19 342 V
19 819 V
19 -668 V
19 -51 V
18 1723 V
19 -7 V
19 -2009 V
19 -923 V
19 164 V
19 598 V
19 -216 V
19 1099 V
19 2 V
1213 1372 Pls
1232 2313 Pls
1251 2406 Pls
1270 3546 Pls
1289 1989 Pls
1308 1588 Pls
1327 1652 Pls
1346 2204 Pls
1366 2639 Pls
1384 3120 Pls
1403 3479 Pls
1422 2915 Pls
1441 2330 Pls
1460 2956 Pls
1479 2989 Pls
1498 2625 Pls
1517 3431 Pls
1536 2928 Pls
1556 3087 Pls
1575 2115 Pls
1594 3279 Pls
1613 1720 Pls
1632 2682 Pls
1651 2252 Pls
1670 2904 Pls
1689 2990 Pls
1708 2100 Pls
1727 3141 Pls
1747 2674 Pls
1766 2657 Pls
1785 1473 Pls
1804 2961 Pls
1823 2327 Pls
1842 1976 Pls
1861 2846 Pls
1880 2746 Pls
1899 2976 Pls
1918 2881 Pls
1937 3668 Pls
1956 3564 Pls
1975 1685 Pls
1994 2915 Pls
2013 3120 Pls
2032 2289 Pls
2051 3423 Pls
2070 1944 Pls
2089 2479 Pls
2108 3659 Pls
2126 1939 Pls
2145 1830 Pls
2164 3461 Pls
2184 2641 Pls
2203 1107 Pls
2222 3131 Pls
2241 2397 Pls
2260 2489 Pls
2279 2847 Pls
2298 2860 Pls
2317 3362 Pls
2336 2551 Pls
2355 2352 Pls
2374 2815 Pls
2393 3366 Pls
2412 2622 Pls
2431 2002 Pls
2450 3436 Pls
2468 2596 Pls
2487 3097 Pls
2506 2434 Pls
2525 2937 Pls
2543 3079 Pls
2562 2776 Pls
2581 1930 Pls
2600 2001 Pls
2619 3759 Pls
2638 2683 Pls
2657 2750 Pls
2676 2795 Pls
2696 2753 Pls
2715 2748 Pls
2734 2687 Pls
2753 1962 Pls
2772 1691 Pls
2790 1929 Pls
2809 2036 Pls
2828 2284 Pls
2847 1463 Pls
2866 2619 Pls
2885 4029 Pls
2904 2733 Pls
2923 1932 Pls
2942 1408 Pls
2960 2394 Pls
2980 2756 Pls
2999 2721 Pls
3017 2583 Pls
3037 2309 Pls
3056 2556 Pls
3075 1865 Pls
3094 2644 Pls
3113 1805 Pls
3133 2570 Pls
3152 2314 Pls
3171 2182 Pls
3190 2835 Pls
3209 3917 Pls
3228 3106 Pls
3247 3492 Pls
3267 3281 Pls
3285 2547 Pls
3304 3851 Pls
3323 2431 Pls
3342 3071 Pls
3361 2384 Pls
3380 3418 Pls
3398 1995 Pls
3417 2523 Pls
3436 2223 Pls
3455 2515 Pls
3474 3252 Pls
3493 2872 Pls
3512 2886 Pls
3531 3841 Pls
3550 1395 Pls
3569 1988 Pls
3587 1454 Pls
3607 3152 Pls
3625 2402 Pls
3645 2436 Pls
3664 1145 Pls
3683 1137 Pls
3702 2556 Pls
3721 2512 Pls
3740 3345 Pls
3759 3082 Pls
3778 3295 Pls
3797 2801 Pls
3816 1735 Pls
3835 2138 Pls
3854 3296 Pls
3873 3012 Pls
3892 3031 Pls
3912 2627 Pls
3932 3231 Pls
3951 3379 Pls
3970 2713 Pls
3989 2108 Pls
4008 3041 Pls
4027 2292 Pls
4046 2874 Pls
4065 2893 Pls
4084 3109 Pls
4102 2593 Pls
4121 3025 Pls
4140 2481 Pls
4159 3036 Pls
4178 1738 Pls
4198 1900 Pls
4217 3208 Pls
4236 2258 Pls
4255 4001 Pls
4274 2222 Pls
4293 3107 Pls
4312 3629 Pls
4331 2731 Pls
4350 3793 Pls
4368 2533 Pls
4387 4108 Pls
4406 2650 Pls
4425 3051 Pls
4444 2295 Pls
4463 2609 Pls
4482 2422 Pls
4501 2234 Pls
4521 3209 Pls
4539 1966 Pls
4558 3056 Pls
4577 2994 Pls
4596 2199 Pls
4615 3606 Pls
4633 3039 Pls
4653 2758 Pls
4671 2482 Pls
4690 2509 Pls
4709 2187 Pls
4728 3921 Pls
4747 2586 Pls
4766 1782 Pls
4786 2650 Pls
4805 1796 Pls
4824 2638 Pls
4843 1230 Pls
4862 2677 Pls
4881 3039 Pls
4899 3104 Pls
4918 3024 Pls
4938 2028 Pls
4957 1218 Pls
4976 2867 Pls
4995 2198 Pls
5013 2460 Pls
5033 2535 Pls
5052 2711 Pls
5071 3112 Pls
5090 2630 Pls
5109 3288 Pls
5128 2315 Pls
5147 3110 Pls
5166 3398 Pls
5186 2020 Pls
5205 2034 Pls
5224 2123 Pls
5243 2595 Pls
5262 2682 Pls
5281 3328 Pls
5300 3287 Pls
5319 3463 Pls
5338 2465 Pls
5357 2364 Pls
5376 2340 Pls
5394 1846 Pls
5413 3025 Pls
5432 2563 Pls
5451 2002 Pls
5469 1991 Pls
5489 2429 Pls
5508 2680 Pls
5527 2389 Pls
5546 2503 Pls
5564 2586 Pls
5583 3566 Pls
5602 1503 Pls
5621 3015 Pls
5641 1935 Pls
5660 2615 Pls
5679 1469 Pls
5698 2813 Pls
5717 1963 Pls
5736 1243 Pls
5755 2949 Pls
5774 2508 Pls
5793 2318 Pls
5812 2166 Pls
5831 2892 Pls
5850 2440 Pls
5869 2719 Pls
5888 2563 Pls
5907 2093 Pls
5926 2997 Pls
5945 2088 Pls
5964 3039 Pls
5983 3292 Pls
6002 2143 Pls
6021 3030 Pls
6041 2891 Pls
6059 2575 Pls
6078 2656 Pls
6098 2557 Pls
6117 1666 Pls
6136 1966 Pls
6155 2466 Pls
6174 2300 Pls
6193 3132 Pls
6211 1448 Pls
6230 2929 Pls
6249 2519 Pls
6268 1992 Pls
6287 1907 Pls
6306 2448 Pls
6325 2748 Pls
6344 3136 Pls
6363 2448 Pls
6382 2430 Pls
6401 2751 Pls
6420 2900 Pls
6439 2899 Pls
6459 2294 Pls
6477 2464 Pls
6496 2362 Pls
6515 2051 Pls
6534 2393 Pls
6553 3212 Pls
6572 2544 Pls
6591 2493 Pls
6609 4216 Pls
6628 4209 Pls
6647 2200 Pls
6666 1277 Pls
6685 1441 Pls
6704 2039 Pls
6723 1823 Pls
6742 2922 Pls
6761 2924 Pls
6159 4568 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
