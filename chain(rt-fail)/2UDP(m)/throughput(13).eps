%!PS-Adobe-2.0 EPSF-2.0
%%Title: throughput(13).eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon Jun 13 11:39:14 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (throughput\(13\).eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (ma)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jun 13 11:39:14 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 768 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 1565 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 1565 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 1565 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 2361 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 2361 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 2361 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 3158 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 3158 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3158 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 150)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 3954 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 3954 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 3954 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 200)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 4751 M
5591 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 4751 M
63 0 V
5528 0 R
-63 0 V
stroke
1032 4751 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 250)]
] -80.0 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1176 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1176 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1176 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
1735 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1735 768 M
0 63 V
0 3920 R
0 -63 V
stroke
1735 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2294 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2294 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2294 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 20)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
2853 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2853 768 M
0 63 V
0 3920 R
0 -63 V
stroke
2853 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 30)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3412 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3412 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3412 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 40)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
3972 768 M
0 3440 V
0 480 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3972 768 M
0 63 V
0 3920 R
0 -63 V
stroke
3972 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 50)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
4531 768 M
0 3440 V
0 480 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4531 768 M
0 63 V
0 3920 R
0 -63 V
stroke
4531 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 60)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5090 768 M
0 3440 V
0 480 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5090 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5090 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 70)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
5649 768 M
0 3440 V
0 480 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
5649 768 M
0 63 V
0 3920 R
0 -63 V
stroke
5649 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 80)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6208 768 M
0 3440 V
0 480 R
0 63 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6208 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6208 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 90)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
6767 768 M
0 3983 V
stroke
1.000 UL
LTb
LCb setrgbcolor
6767 768 M
0 63 V
0 3920 R
0 -63 V
stroke
6767 528 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 100)]
] -80.0 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
192 2759 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Throghput\(Kbps\))]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3971 168 M
[ [(Helvetica) 240.0 0.0 true true 0 (Node Length)]
] -80.0 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
5696 4568 M
[ [(Helvetica) 240.0 0.0 true true 0 (hops=13,flow=0)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 5840 4568 M
639 0 V
1340 802 M
98 410 V
68 472 V
85 -360 V
59 1068 V
58 250 V
57 -842 V
64 666 V
60 -659 V
57 167 V
114 -692 V
88 23 V
60 -293 V
57 1352 V
60 -550 V
66 -660 V
90 -20 V
58 1768 V
71 -1621 V
2796 983 L
58 725 V
67 37 V
98 -678 V
59 200 V
56 282 V
56 1176 V
57 -1512 V
83 1316 V
65 -519 V
3671 966 L
57 966 V
68 -950 V
103 104 V
205 -68 V
77 -109 V
57 1071 V
107 -632 V
81 -128 V
58 866 V
61 -174 V
58 1473 V
57 -1263 V
60 1059 V
59 -1974 V
57 388 V
56 608 V
5017 1088 L
83 119 V
58 -60 V
86 598 V
57 1016 V
58 -674 V
56 1459 V
58 -141 V
57 -1099 V
61 -1118 V
56 2240 V
5764 1269 L
57 1165 V
75 -553 V
58 24 V
83 -125 V
89 -724 V
56 1994 V
68 -1100 V
146 -734 V
67 376 V
58 739 V
1340 802 Pls
1438 1212 Pls
1506 1684 Pls
1591 1324 Pls
1650 2392 Pls
1708 2642 Pls
1765 1800 Pls
1829 2466 Pls
1889 1807 Pls
1946 1974 Pls
2060 1282 Pls
2148 1305 Pls
2208 1012 Pls
2265 2364 Pls
2325 1814 Pls
2391 1154 Pls
2481 1134 Pls
2539 2902 Pls
2610 1281 Pls
2796 983 Pls
2854 1708 Pls
2921 1745 Pls
3019 1067 Pls
3078 1267 Pls
3134 1549 Pls
3190 2725 Pls
3247 1213 Pls
3330 2529 Pls
3395 2010 Pls
3671 966 Pls
3728 1932 Pls
3796 982 Pls
3899 1086 Pls
4104 1018 Pls
4181 909 Pls
4238 1980 Pls
4345 1348 Pls
4426 1220 Pls
4484 2086 Pls
4545 1912 Pls
4603 3385 Pls
4660 2122 Pls
4720 3181 Pls
4779 1207 Pls
4836 1595 Pls
4892 2203 Pls
5017 1088 Pls
5100 1207 Pls
5158 1147 Pls
5244 1745 Pls
5301 2761 Pls
5359 2087 Pls
5415 3546 Pls
5473 3405 Pls
5530 2306 Pls
5591 1188 Pls
5647 3428 Pls
5764 1269 Pls
5821 2434 Pls
5896 1881 Pls
5954 1905 Pls
6037 1780 Pls
6126 1056 Pls
6182 3050 Pls
6250 1950 Pls
6396 1216 Pls
6463 1592 Pls
6521 2331 Pls
6159 4568 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
5696 4328 M
[ [(Helvetica) 240.0 0.0 true true 0 (hops=13,flow=1)]
] -80.0 MRshow
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 5840 4328 M
639 0 V
1346 800 M
57 614 V
56 1688 V
57 -1129 V
57 216 V
56 -130 V
59 -109 V
56 705 V
57 -921 V
56 583 V
57 179 V
57 -129 V
57 1489 V
88 -1640 V
57 1587 V
2279 1663 L
59 28 V
64 -467 V
56 515 V
78 -82 V
57 2056 V
57 -886 V
56 1631 V
57 154 V
64 -2017 V
58 -874 V
62 -134 V
56 24 V
56 524 V
3196 821 L
58 703 V
57 596 V
56 595 V
56 -773 V
77 -748 V
109 1124 V
56 1405 V
58 -2139 V
57 2461 V
60 -2184 V
59 2276 V
88 -2995 V
56 1647 V
93 -1080 V
59 975 V
56 -425 V
4356 1149 L
56 2354 V
4515 1018 L
72 1822 V
56 -581 V
65 -816 V
59 556 V
63 -648 V
60 566 V
89 -738 V
67 294 V
58 1878 V
56 -1088 V
110 -463 V
57 302 V
125 -661 V
57 660 V
124 -862 V
56 114 V
5863 873 L
60 1674 V
58 -332 V
56 -276 V
186 -897 V
61 205 V
63 450 V
57 1306 V
59 -995 V
56 -138 V
106 -376 V
110 898 V
1346 800 Crs
1403 1414 Crs
1459 3102 Crs
1516 1973 Crs
1573 2189 Crs
1629 2059 Crs
1688 1950 Crs
1744 2655 Crs
1801 1734 Crs
1857 2317 Crs
1914 2496 Crs
1971 2367 Crs
2028 3856 Crs
2116 2216 Crs
2173 3803 Crs
2279 1663 Crs
2338 1691 Crs
2402 1224 Crs
2458 1739 Crs
2536 1657 Crs
2593 3713 Crs
2650 2827 Crs
2706 4458 Crs
2763 4612 Crs
2827 2595 Crs
2885 1721 Crs
2947 1587 Crs
3003 1611 Crs
3059 2135 Crs
3196 821 Crs
3254 1524 Crs
3311 2120 Crs
3367 2715 Crs
3423 1942 Crs
3500 1194 Crs
3609 2318 Crs
3665 3723 Crs
3723 1584 Crs
3780 4045 Crs
3840 1861 Crs
3899 4137 Crs
3987 1142 Crs
4043 2789 Crs
4136 1709 Crs
4195 2684 Crs
4251 2259 Crs
4356 1149 Crs
4412 3503 Crs
4515 1018 Crs
4587 2840 Crs
4643 2259 Crs
4708 1443 Crs
4767 1999 Crs
4830 1351 Crs
4890 1917 Crs
4979 1179 Crs
5046 1473 Crs
5104 3351 Crs
5160 2263 Crs
5270 1800 Crs
5327 2102 Crs
5452 1441 Crs
5509 2101 Crs
5633 1239 Crs
5689 1353 Crs
5863 873 Crs
5923 2547 Crs
5981 2215 Crs
6037 1939 Crs
6223 1042 Crs
6284 1247 Crs
6347 1697 Crs
6404 3003 Crs
6463 2008 Crs
6519 1870 Crs
6625 1494 Crs
6735 2392 Crs
6159 4328 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1176 4751 N
0 -3983 V
5591 0 V
0 3983 V
-5591 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
